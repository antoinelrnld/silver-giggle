name: SageMaker Training Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      #- name: Set MLFLOW_TRACKING_URI environment variable in Dockerfile
      #  run: |
      #    sed -i 's|ENV MLFLOW_TRACKING_URI=.*|ENV MLFLOW_TRACKING_URI=s3://${{ secrets.AWS_S3_BUCKET_NAME}}/models/mlflow-runs|' \
      #    ./experiment/train/Dockerfile

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./experiment/train/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.TRAIN_IMAGE_NAME }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.TRAIN_IMAGE_NAME }}:${{ github.sha }}

  train_job:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GithubActionsName
      
      # - name: Assume AWS role
      #   run: |
      #     ROLE_OUTPUT=$(aws sts assume-role --role-arn ${{ secrets.AWS_ROLE_ARN }} --role-session-name GitHubActions)

      #     export AWS_ACCESS_KEY_ID=$(echo $ROLE_OUTPUT | jq -r .Credentials.AccessKeyId)
      #     export AWS_SECRET_ACCESS_KEY=$(echo $ROLE_OUTPUT | jq -r .Credentials.SecretAccessKey)
      #     export AWS_SESSION_TOKEN=$(echo $ROLE_OUTPUT | jq -r .Credentials.SessionToken)

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Dependencies
        run: |
          pip install sagemaker==2.204.0

      - name: SageMaker Training
        run: |
          cd experiment/train
          python pipeline_train.py \
          --s3-bucket-name ${{ secrets.AWS_S3_BUCKET_NAME }} \
          --aws-role-arn ${{ secrets.AWS_ROLE_ARN }} \
          --image-uri docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.TRAIN_IMAGE_NAME }}:${{ github.sha }} \
          --subnet-id1 ${{ secrets.AWS_SUBNET_ID1 }} \
          --subnet-id2 ${{ secrets.AWS_SUBNET_ID2 }} \
          --subnet-id3 ${{ secrets.AWS_SUBNET_ID3 }} \
          --security-group-id ${{ secrets.AWS_SECURITY_GROUP_ID }}
          
